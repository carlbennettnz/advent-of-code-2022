let input = require('fs').readFileSync('../in/05.txt', 'utf8')

console.log('part 1:', (([stateStr, instructionsStr]) => instructionsStr.map(line => line.match(/\d+/g).map(Number)).map(([r, f, t]) => [r, f-1, t-1]).reduce((state, [r, f, t]) => state.map((col, i) => f === i ? col.slice(0, -r) : (t === i ? [...state[i], ...state[f].slice(-r).reverse()] : state[i])), [...Array(stateStr.at(-1).match(/\d+/g).map(Number).at(-1))].map((_, i) => stateStr.slice(0, -1).map(line => line[i*4+1]).filter(item => item && item !== ' ').reverse())).map(col => col.at(-1)).join(''))(input.split('\n\n').map(s => s.trimEnd().split('\n'))))
console.log('part 2:', (([stateStr, instructionsStr]) => instructionsStr.map(line => line.match(/\d+/g).map(Number)).map(([r, f, t]) => [r, f-1, t-1]).reduce((state, [r, f, t]) => state.map((col, i) => f === i ? col.slice(0, -r) : (t === i ? [...state[i], ...state[f].slice(-r)] : state[i])), [...Array(stateStr.at(-1).match(/\d+/g).map(Number).at(-1))].map((_, i) => stateStr.slice(0, -1).map(line => line[i*4+1]).filter(item => item && item !== ' ').reverse())).map(col => col.at(-1)).join(''))(input.split('\n\n').map(s => s.trimEnd().split('\n'))))
